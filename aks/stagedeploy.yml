name: $(Build.DefinitionName)_$(Date:yyyyMMdd)$(Rev:.r)
pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: test
    pool: 
      vmImage: 'ubuntu-latest'
    displayName: testrun
    jobs:
    - deployment: testbuild
      variables:
        - group: sandbox
      displayName: testbuild
      environment: dev
      strategy:
        runOnce:
         deploy:
           steps:
             - script: |
                 echo "hello test done"
             - task: DotNetCoreCLI@2
               inputs:
                 command: 'restore'
                 projects: '**.*.csproj'
                 feedsToUse: 'select'
                 vstsFeed: '3da0f111-d328-4402-873f-eb76088dabf9/22775c2f-6896-4c7f-8813-be28df245e33'
             - task: DotNetCoreCLI@2
               inputs:
                 command: 'build'
                 projects: '**.*.csproj'
             - task: Docker@2
               inputs:
                 repository: 'thoughtworks'
                 command: 'build'
                 Dockerfile: '**/Dockerfile'
                 tags: '$(Build.BuildId)'
             - task: Docker@2
               inputs:
                 repository: 'thoughtworks'
                 command: 'push'
                 tags: '$(Build.BuildId)'
  - stage: validation
    displayName: test2validation
    pool:
      vmImage: 'ubuntu-latest'
    dependsOn: test
    condition: succeeded('test')
    jobs:
      - deployment: intervention
        environment: dev
        strategy:
         runOnce:
           deploy:
             steps:
              - task: ManualValidation@0
                timeoutInMinutes: 60 # task times out in 1 hour
                inputs:
                  notifyUsers: |
                   HBhojwani@primark.onmicrosoft.com
                  instructions: 'Please validate the build configuration and resume'
                  onTimeout: 'reject'
              - task: Kubernetes@1
                inputs:
                  connectionType: 'Kubernetes Service Connection'
                  namespace: 'thoughtwork'
                  command: 'apply'
                  arguments: '**/deployment.yml'
                  secretType: 'dockerRegistry'
                  containerRegistryType: 'Azure Container Registry'